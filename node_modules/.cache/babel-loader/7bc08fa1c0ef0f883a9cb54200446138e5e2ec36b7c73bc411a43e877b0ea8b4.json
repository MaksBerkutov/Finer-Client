{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useSocketPlayer = socket => {\n  _s();\n  const [playedStatus, setStatus] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        socket.on('updatePlayed', status => {\n          setStatus(status);\n        });\n        socket.on('updatePlaylist', ({\n          action,\n          song\n        }) => {\n          if (song === undefined) return;\n          if (action === 'allItems') {\n            socket.emit('getCurrentStatus', callback => {\n              setStatus(callback);\n            });\n          }\n        });\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    return () => {\n      socket === null || socket === void 0 ? void 0 : socket.off('updatePlaylist');\n      socket === null || socket === void 0 ? void 0 : socket.off('updatePlayed');\n    };\n  }, [playedStatus, socket]);\n  return playedStatus;\n};\n_s(useSocketPlayer, \"TBQA9bJrsTFDWj6RAwKZ62xVMv4=\");","map":{"version":3,"names":["useState","useEffect","useSocketPlayer","socket","_s","playedStatus","setStatus","fetchData","on","status","action","song","undefined","emit","callback","error","console","log","off"],"sources":["/home/maksb/Загрузки/170km/frontend/src/components/Pages/MusicPage/hooks/useSocketPlayer.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nexport const useSocketPlayer = socket => {\n\tconst [playedStatus, setStatus] = useState(true)\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tsocket.on('updatePlayed', status => {\n\t\t\t\t\tsetStatus(status)\n\t\t\t\t})\n\t\t\t\tsocket.on('updatePlaylist', ({ action, song }) => {\n\t\t\t\t\tif (song === undefined) return\n\t\t\t\t\tif (action === 'allItems') {\n\t\t\t\t\t\tsocket.emit('getCurrentStatus', callback => {\n\t\t\t\t\t\t\tsetStatus(callback)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error fetching data:', error)\n\t\t\t}\n\t\t}\n\n\t\tfetchData()\n\t\treturn () => {\n\t\t\tsocket?.off('updatePlaylist')\n\t\t\tsocket?.off('updatePlayed')\n\t\t}\n\t}, [playedStatus, socket])\n\treturn playedStatus\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,eAAe,GAAGC,MAAM,IAAI;EAAAC,EAAA;EACxC,MAAM,CAACC,YAAY,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChDC,SAAS,CAAC,MAAM;IACf,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACHJ,MAAM,CAACK,EAAE,CAAC,cAAc,EAAEC,MAAM,IAAI;UACnCH,SAAS,CAACG,MAAM,CAAC;QAClB,CAAC,CAAC;QACFN,MAAM,CAACK,EAAE,CAAC,gBAAgB,EAAE,CAAC;UAAEE,MAAM;UAAEC;QAAK,CAAC,KAAK;UACjD,IAAIA,IAAI,KAAKC,SAAS,EAAE;UACxB,IAAIF,MAAM,KAAK,UAAU,EAAE;YAC1BP,MAAM,CAACU,IAAI,CAAC,kBAAkB,EAAEC,QAAQ,IAAI;cAC3CR,SAAS,CAACQ,QAAQ,CAAC;YACpB,CAAC,CAAC;UACH;QACD,CAAC,CAAC;MACH,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC3C;IACD,CAAC;IAEDR,SAAS,CAAC,CAAC;IACX,OAAO,MAAM;MACZJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEe,GAAG,CAAC,gBAAgB,CAAC;MAC7Bf,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEe,GAAG,CAAC,cAAc,CAAC;IAC5B,CAAC;EACF,CAAC,EAAE,CAACb,YAAY,EAAEF,MAAM,CAAC,CAAC;EAC1B,OAAOE,YAAY;AACpB,CAAC;AAAAD,EAAA,CA5BYF,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}