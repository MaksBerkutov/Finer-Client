{"ast":null,"code":"var _jsxFileName = \"/home/maksb/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/170km/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport PlayedList from './component/PlayedList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    // Функция для получения данных с бэкенда\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:3001/api/songs');\n        const data = await response.json();\n        setSongs(data);\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    };\n\n    // Вызываем функцию при монтировании компонента\n    fetchData();\n  }, []); // Пустой массив зависимостей гарантирует, что эффект выполняется только один раз при монтировании\n  const click = item => {\n    console.log(item);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-title\",\n        children: \"Now Playing: Song Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PlayedList, {\n      items: songs,\n      click: click\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","PlayedList","jsxDEV","_jsxDEV","App","_s","songs","setSongs","fetchData","response","fetch","data","json","error","console","log","click","item","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","items","_c","$RefreshReg$"],"sources":["/home/maksb/Загрузки/170km/frontend/src/App.js"],"sourcesContent":["import './App.css'\nimport { useEffect, useState } from 'react'\nimport PlayedList from './component/PlayedList'\n\nfunction App() {\n\tconst [songs, setSongs] = useState([])\n\n\tuseEffect(() => {\n\t\t// Функция для получения данных с бэкенда\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch('http://127.0.0.1:3001/api/songs')\n\t\t\t\tconst data = await response.json()\n\t\t\t\tsetSongs(data)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error fetching data:', error)\n\t\t\t}\n\t\t}\n\n\t\t// Вызываем функцию при монтировании компонента\n\t\tfetchData()\n\t}, []) // Пустой массив зависимостей гарантирует, что эффект выполняется только один раз при монтировании\n\tconst click = item => {\n\t\tconsole.log(item)\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<div className='player'>\n\t\t\t\t<div className='song-title'>Now Playing: Song Title</div>\n\t\t\t\t<div id='controls'>\n\t\t\t\t\t<button>Previous</button>\n\t\t\t\t\t<button>Play</button>\n\t\t\t\t\t<button>Next</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<PlayedList items={songs} click={click} />\n\t\t</div>\n\t)\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACf;IACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,QAAQ,CAACI,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,KAAK,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC3C;IACD,CAAC;;IAED;IACAL,SAAS,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC,EAAC;EACP,MAAMQ,KAAK,GAAGC,IAAI,IAAI;IACrBH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;EAClB,CAAC;EACD,oBACCd,OAAA;IAAAe,QAAA,gBACCf,OAAA;MAAKgB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACtBf,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzDpB,OAAA;QAAKqB,EAAE,EAAC,UAAU;QAAAN,QAAA,gBACjBf,OAAA;UAAAe,QAAA,EAAQ;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzBpB,OAAA;UAAAe,QAAA,EAAQ;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrBpB,OAAA;UAAAe,QAAA,EAAQ;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNpB,OAAA,CAACF,UAAU;MAACwB,KAAK,EAAEnB,KAAM;MAACU,KAAK,EAAEA;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAER;AAAClB,EAAA,CAlCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoCZ,eAAeA,GAAG;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}