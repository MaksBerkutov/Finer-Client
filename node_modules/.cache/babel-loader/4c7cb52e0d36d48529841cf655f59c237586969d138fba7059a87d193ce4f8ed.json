{"ast":null,"code":"var _jsxFileName = \"/home/maksb/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/170km/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport classes from './App.module.css';\nimport { useEffect, useState } from 'react';\nimport PlayedList from './component/PlayedList';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://10.147.18.205:3001');\nfunction App() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [currentPlayed, setCurrentPlayed] = useState(-1);\n  const [currentStream, setCurrentStream] = useState(null);\n\n  //audio \n  const audioRef = useRef();\n  const audioContextRef = useRef(new (window.AudioContext || window.webkitAudioContext)());\n  const audioBufferRef = useRef(audioContextRef.current.createBuffer(2, 44100, 44100));\n  useEffect(() => {\n    // Функция для получения данных с бэкенда\n    const fetchData = async () => {\n      try {\n        socket.on('audioChunk', chunk => {});\n        socket.on('updatePlaylist', ({\n          action,\n          song\n        }) => {\n          if (song === undefined) return;\n          if (action === 'allItems') {\n            setSongs(song);\n            socket.emit('getCurrentPlayed', {\n              currentPlayed\n            }, index => {\n              setCurrentPlayed(index.currentPlayed);\n            });\n          } else if (action === 'add') {\n            setSongs([...songs, song]);\n          } else if (action === 'remove') {\n            setSongs(songs.slice(1));\n          } else if (action === 'newCurrentPlayed') {\n            setCurrentPlayed(song);\n          }\n          socket.emit('getStream', stream => {\n            console.log(stream);\n            if (stream != null) {\n              const audioBlob = new Blob([stream]);\n              const audioUrl = URL.createObjectURL(audioBlob);\n              setCurrentStream(audioUrl);\n            }\n          });\n        });\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    };\n\n    // Вызываем функцию при монтировании компонента\n    fetchData();\n    return () => {\n      socket.off('updatePlaylist');\n    };\n  }, [songs, currentPlayed]); // Пустой массив зависимостей гарантирует, что эффект выполняется только один раз при монтировании\n  const click = item => {\n    console.log(item);\n  };\n  const finded = songs.find(x => x.id === currentPlayed);\n  const text = currentPlayed === -1 ? '' : finded === undefined ? '' : finded.title;\n  console.log('text: ', currentStream);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.player,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.songTitle,\n        children: [\"Now Playing: \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), currentStream === null ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No playing songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: currentStream,\n          type: \"audio/mp3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PlayedList, {\n      currentPlayed: currentPlayed,\n      items: songs,\n      click: click\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"1kF7li4cFjrrdWb3sKgtiGoTlxw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["classes","useEffect","useState","PlayedList","io","jsxDEV","_jsxDEV","socket","App","_s","songs","setSongs","currentPlayed","setCurrentPlayed","currentStream","setCurrentStream","audioRef","useRef","audioContextRef","window","AudioContext","webkitAudioContext","audioBufferRef","current","createBuffer","fetchData","on","chunk","action","song","undefined","emit","index","slice","stream","console","log","audioBlob","Blob","audioUrl","URL","createObjectURL","error","off","click","item","finded","find","x","id","text","title","className","container","children","player","songTitle","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","type","items","_c","$RefreshReg$"],"sources":["/home/maksb/Загрузки/170km/frontend/src/App.js"],"sourcesContent":["import classes from './App.module.css'\nimport { useEffect, useState } from 'react'\nimport PlayedList from './component/PlayedList'\nimport io from 'socket.io-client'\n\nconst socket = io('http://10.147.18.205:3001')\n\nfunction App() {\n\tconst [songs, setSongs] = useState([])\n\tconst [currentPlayed, setCurrentPlayed] = useState(-1)\n\tconst [currentStream, setCurrentStream] = useState(null)\n\n\t//audio \n\t  const audioRef = useRef()\n\t\tconst audioContextRef = useRef(\n\t\t\tnew (window.AudioContext || window.webkitAudioContext)()\n\t\t)\n\t\tconst audioBufferRef = useRef(\n\t\t\taudioContextRef.current.createBuffer(2, 44100, 44100)\n\t\t)\n\n\tuseEffect(() => {\n\t\t// Функция для получения данных с бэкенда\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tsocket.on('audioChunk', chunk => {\n\t\t\t\t\t\n\t\t\t\t})\n\n\t\t\t\tsocket.on('updatePlaylist', ({ action, song }) => {\n\t\t\t\t\tif (song === undefined) return\n\t\t\t\t\tif (action === 'allItems') {\n\t\t\t\t\t\tsetSongs(song)\n\n\t\t\t\t\t\tsocket.emit('getCurrentPlayed', { currentPlayed }, index => {\n\t\t\t\t\t\t\tsetCurrentPlayed(index.currentPlayed)\n\t\t\t\t\t\t})\n\t\t\t\t\t} else if (action === 'add') {\n\t\t\t\t\t\tsetSongs([...songs, song])\n\t\t\t\t\t} else if (action === 'remove') {\n\t\t\t\t\t\tsetSongs(songs.slice(1))\n\t\t\t\t\t} else if (action === 'newCurrentPlayed') {\n\t\t\t\t\t\tsetCurrentPlayed(song)\n\t\t\t\t\t}\n\t\t\t\t\tsocket.emit('getStream', stream => {\n\t\t\t\t\t\tconsole.log(stream)\n\t\t\t\t\t\tif (stream != null) {\n\t\t\t\t\t\t\tconst audioBlob = new Blob([stream])\n\t\t\t\t\t\t\tconst audioUrl = URL.createObjectURL(audioBlob)\n\t\t\t\t\t\t\tsetCurrentStream(audioUrl)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error fetching data:', error)\n\t\t\t}\n\t\t}\n\n\t\t// Вызываем функцию при монтировании компонента\n\t\tfetchData()\n\t\treturn () => {\n\t\t\tsocket.off('updatePlaylist')\n\t\t}\n\t}, [songs, currentPlayed]) // Пустой массив зависимостей гарантирует, что эффект выполняется только один раз при монтировании\n\tconst click = item => {\n\t\tconsole.log(item)\n\t}\n\n\tconst finded = songs.find(x => x.id === currentPlayed)\n\tconst text =\n\t\tcurrentPlayed === -1 ? '' : finded === undefined ? '' : finded.title\n\tconsole.log('text: ', currentStream)\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<div className={classes.player}>\n\t\t\t\t<div className={classes.songTitle}>Now Playing: {text}</div>\n\t\t\t\t{currentStream === null ? (\n\t\t\t\t\t<h1>No playing songs</h1>\n\t\t\t\t) : (\n\t\t\t\t\t<audio controls>\n\t\t\t\t\t\t<source src={currentStream} type='audio/mp3'></source>\n\t\t\t\t\t</audio>\n\t\t\t\t)}\n\t\t\t\t<div className={classes.controls}>\n\t\t\t\t\t<button>Previous</button>\n\t\t\t\t\t<button>Play</button>\n\t\t\t\t\t<button>Next</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<PlayedList currentPlayed={currentPlayed} items={songs} click={click} />\n\t\t</div>\n\t)\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,kBAAkB;AACtC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,EAAE,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGH,EAAE,CAAC,2BAA2B,CAAC;AAE9C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACE,MAAMc,QAAQ,GAAGC,MAAM,CAAC,CAAC;EAC1B,MAAMC,eAAe,GAAGD,MAAM,CAC7B,KAAKE,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CACxD,CAAC;EACD,MAAMC,cAAc,GAAGL,MAAM,CAC5BC,eAAe,CAACK,OAAO,CAACC,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CACrD,CAAC;EAEFvB,SAAS,CAAC,MAAM;IACf;IACA,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACHlB,MAAM,CAACmB,EAAE,CAAC,YAAY,EAAEC,KAAK,IAAI,CAEjC,CAAC,CAAC;QAEFpB,MAAM,CAACmB,EAAE,CAAC,gBAAgB,EAAE,CAAC;UAAEE,MAAM;UAAEC;QAAK,CAAC,KAAK;UACjD,IAAIA,IAAI,KAAKC,SAAS,EAAE;UACxB,IAAIF,MAAM,KAAK,UAAU,EAAE;YAC1BjB,QAAQ,CAACkB,IAAI,CAAC;YAEdtB,MAAM,CAACwB,IAAI,CAAC,kBAAkB,EAAE;cAAEnB;YAAc,CAAC,EAAEoB,KAAK,IAAI;cAC3DnB,gBAAgB,CAACmB,KAAK,CAACpB,aAAa,CAAC;YACtC,CAAC,CAAC;UACH,CAAC,MAAM,IAAIgB,MAAM,KAAK,KAAK,EAAE;YAC5BjB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEmB,IAAI,CAAC,CAAC;UAC3B,CAAC,MAAM,IAAID,MAAM,KAAK,QAAQ,EAAE;YAC/BjB,QAAQ,CAACD,KAAK,CAACuB,KAAK,CAAC,CAAC,CAAC,CAAC;UACzB,CAAC,MAAM,IAAIL,MAAM,KAAK,kBAAkB,EAAE;YACzCf,gBAAgB,CAACgB,IAAI,CAAC;UACvB;UACAtB,MAAM,CAACwB,IAAI,CAAC,WAAW,EAAEG,MAAM,IAAI;YAClCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;YACnB,IAAIA,MAAM,IAAI,IAAI,EAAE;cACnB,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACJ,MAAM,CAAC,CAAC;cACpC,MAAMK,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACJ,SAAS,CAAC;cAC/CtB,gBAAgB,CAACwB,QAAQ,CAAC;YAC3B;UACD,CAAC,CAAC;QACH,CAAC,CAAC;MACH,CAAC,CAAC,OAAOG,KAAK,EAAE;QACfP,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEM,KAAK,CAAC;MAC3C;IACD,CAAC;;IAED;IACAjB,SAAS,CAAC,CAAC;IACX,OAAO,MAAM;MACZlB,MAAM,CAACoC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,CAAC;EACF,CAAC,EAAE,CAACjC,KAAK,EAAEE,aAAa,CAAC,CAAC,EAAC;EAC3B,MAAMgC,KAAK,GAAGC,IAAI,IAAI;IACrBV,OAAO,CAACC,GAAG,CAACS,IAAI,CAAC;EAClB,CAAC;EAED,MAAMC,MAAM,GAAGpC,KAAK,CAACqC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKrC,aAAa,CAAC;EACtD,MAAMsC,IAAI,GACTtC,aAAa,KAAK,CAAC,CAAC,GAAG,EAAE,GAAGkC,MAAM,KAAKhB,SAAS,GAAG,EAAE,GAAGgB,MAAM,CAACK,KAAK;EACrEhB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEtB,aAAa,CAAC;EACpC,oBACCR,OAAA;IAAK8C,SAAS,EAAEpD,OAAO,CAACqD,SAAU;IAAAC,QAAA,gBACjChD,OAAA;MAAK8C,SAAS,EAAEpD,OAAO,CAACuD,MAAO;MAAAD,QAAA,gBAC9BhD,OAAA;QAAK8C,SAAS,EAAEpD,OAAO,CAACwD,SAAU;QAAAF,QAAA,GAAC,eAAa,EAACJ,IAAI;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC3D9C,aAAa,KAAK,IAAI,gBACtBR,OAAA;QAAAgD,QAAA,EAAI;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAEzBtD,OAAA;QAAOuD,QAAQ;QAAAP,QAAA,eACdhD,OAAA;UAAQwD,GAAG,EAAEhD,aAAc;UAACiD,IAAI,EAAC;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CACP,eACDtD,OAAA;QAAK8C,SAAS,EAAEpD,OAAO,CAAC6D,QAAS;QAAAP,QAAA,gBAChChD,OAAA;UAAAgD,QAAA,EAAQ;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzBtD,OAAA;UAAAgD,QAAA,EAAQ;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrBtD,OAAA;UAAAgD,QAAA,EAAQ;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNtD,OAAA,CAACH,UAAU;MAACS,aAAa,EAAEA,aAAc;MAACoD,KAAK,EAAEtD,KAAM;MAACkC,KAAK,EAAEA;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAER;AAACnD,EAAA,CArFQD,GAAG;AAAAyD,EAAA,GAAHzD,GAAG;AAuFZ,eAAeA,GAAG;AAAA,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}