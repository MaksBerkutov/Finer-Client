{"ast":null,"code":"var _jsxFileName = \"/home/maksb/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/170km/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport PlayedList from './component/PlayedList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    // Функция для получения данных с бэкенда\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/songs');\n        const data = await response.json();\n        setSongs(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // Вызываем функцию при монтировании компонента\n    fetchData();\n  }, []); // Пустой массив зависимостей гарантирует, что эффект выполняется только один раз при монтировании\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"song-title\",\n        children: \"Now Playing: Song Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PlayedList, {\n      items: songs,\n      click: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","PlayedList","jsxDEV","_jsxDEV","App","_s","songs","setSongs","fetchData","response","fetch","data","json","error","console","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","items","click","_c","$RefreshReg$"],"sources":["/home/maksb/Загрузки/170km/frontend/src/App.js"],"sourcesContent":["import './App.css'\nimport { useEffect, useState } from 'react'\nimport PlayedList from './component/PlayedList'\n\nfunction App() {\n\tconst [songs, setSongs] = useState([])\n\n\tuseEffect(() => {\n\t\t// Функция для получения данных с бэкенда\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch('/api/songs')\n\t\t\t\tconst data = await response.json()\n\t\t\t\tsetSongs(data)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error fetching data:', error)\n\t\t\t}\n\t\t}\n\n\t\t// Вызываем функцию при монтировании компонента\n\t\tfetchData()\n\t}, []) // Пустой массив зависимостей гарантирует, что эффект выполняется только один раз при монтировании\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div id='player'>\n\t\t\t\t<div id='song-title'>Now Playing: Song Title</div>\n\n\t\t\t\t<div id='controls'>\n\t\t\t\t\t<button>Previous</button>\n\t\t\t\t\t<button>Play</button>\n\t\t\t\t\t<button>Next</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<PlayedList items={songs} click />\n\t\t</div>\n\t)\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACf;IACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;QAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,QAAQ,CAACI,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC7C;IACD,CAAC;;IAED;IACAL,SAAS,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC,EAAC;;EAEP,oBACCL,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnBb,OAAA;MAAKc,EAAE,EAAC,QAAQ;MAAAD,QAAA,gBACfb,OAAA;QAAKc,EAAE,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAElDlB,OAAA;QAAKc,EAAE,EAAC,UAAU;QAAAD,QAAA,gBACjBb,OAAA;UAAAa,QAAA,EAAQ;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzBlB,OAAA;UAAAa,QAAA,EAAQ;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrBlB,OAAA;UAAAa,QAAA,EAAQ;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNlB,OAAA,CAACF,UAAU;MAACqB,KAAK,EAAEhB,KAAM;MAACiB,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAER;AAAChB,EAAA,CAjCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAmCZ,eAAeA,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}