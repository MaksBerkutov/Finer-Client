{"ast":null,"code":"var _jsxFileName = \"/home/maksb/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/170km/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport classes from './App.module.css';\nimport { useEffect, useState } from 'react';\nimport PlayedList from './component/PlayedList';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://10.147.18.205:3002');\nfunction App() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [currentPlayed, setCurrentPlayed] = useState(-1);\n  useEffect(() => {\n    // Функция для получения данных с бэкенда\n    const fetchData = async () => {\n      try {\n        socket.on('updatePlaylist', ({\n          action,\n          song\n        }) => {\n          if (song === undefined) return;\n          if (action === 'allItems') {\n            setSongs(song);\n            socket.emit('getCurrentPlayed', {\n              currentPlayed\n            }, index => {\n              setCurrentPlayed(index.currentPlayed);\n            });\n          } else if (action === 'add') {\n            console.log('pushed', song);\n            //console.log(songs)\n            setSongs(songs => [...songs, song]);\n            //console.log(songs)\n          } else if (action === 'remove') {\n            console.log(songs);\n            setSongs(songs => {\n              const updatedSongs = [...songs]; // Создаем копию массива\n\n              if (song !== -1) {\n                updatedSongs.splice(song, 1);\n              }\n              return updatedSongs; // Возвращаем новый массив\n            });\n\n            console.log(songs);\n          } else if (action === 'newCurrentPlayed') {\n            setCurrentPlayed(song);\n          }\n        });\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    };\n\n    // Вызываем функцию при монтировании компонента\n    fetchData();\n    return () => {\n      socket.off('updatePlaylist');\n    };\n  }, [songs, currentPlayed]); // Пустой массив зависимостей гарантирует, что эффект выполняется только один раз при монтировании\n  const goNextSongs = () => {\n    socket.emit('goNextSongs');\n  };\n  const goPrevSongs = () => {\n    socket.emit('goPrevSongs');\n  };\n  const play = item => {\n    socket.emit('setPlayItem', {\n      item\n    });\n  };\n  const remove = item => {\n    socket.emit('deltetePlayItem', {\n      item\n    });\n  };\n  const finded = songs.find(x => x.id === currentPlayed);\n  const text = currentPlayed === -1 ? '' : finded === undefined ? '' : finded.title;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.player,\n      children: [text === '' ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.songTitle,\n        children: [\"Now Playing: \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => goPrevSongs(),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => goNextSongs(),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PlayedList, {\n      remove: remove,\n      play: play,\n      currentPlayed: currentPlayed,\n      items: songs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"Cam+lq8TTTfpeRA2bYpff+3SfoA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["classes","useEffect","useState","PlayedList","io","jsxDEV","_jsxDEV","socket","App","_s","songs","setSongs","currentPlayed","setCurrentPlayed","fetchData","on","action","song","undefined","emit","index","console","log","updatedSongs","splice","error","off","goNextSongs","goPrevSongs","play","item","remove","finded","find","x","id","text","title","className","container","children","player","fileName","_jsxFileName","lineNumber","columnNumber","songTitle","controls","onClick","items","_c","$RefreshReg$"],"sources":["/home/maksb/Загрузки/170km/frontend/src/App.js"],"sourcesContent":["import classes from './App.module.css'\nimport { useEffect, useState } from 'react'\nimport PlayedList from './component/PlayedList'\nimport io from 'socket.io-client'\n\nconst socket = io('http://10.147.18.205:3002')\n\nfunction App() {\n\tconst [songs, setSongs] = useState([])\n\tconst [currentPlayed, setCurrentPlayed] = useState(-1)\n\n\tuseEffect(() => {\n\t\t// Функция для получения данных с бэкенда\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tsocket.on('updatePlaylist', ({ action, song }) => {\n\t\t\t\t\tif (song === undefined) return\n\t\t\t\t\tif (action === 'allItems') {\n\t\t\t\t\t\tsetSongs(song)\n\n\t\t\t\t\t\tsocket.emit('getCurrentPlayed', { currentPlayed }, index => {\n\t\t\t\t\t\t\tsetCurrentPlayed(index.currentPlayed)\n\t\t\t\t\t\t})\n\t\t\t\t\t} else if (action === 'add') {\n\t\t\t\t\t\tconsole.log('pushed', song)\n\t\t\t\t\t\t//console.log(songs)\n\t\t\t\t\t\tsetSongs(songs => [...songs, song])\n\t\t\t\t\t\t//console.log(songs)\n\t\t\t\t\t} else if (action === 'remove') {\n\t\t\t\t\t\tconsole.log(songs)\n\t\t\t\t\t\tsetSongs(songs => {\n\t\t\t\t\t\t\tconst updatedSongs = [...songs] // Создаем копию массива\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\tif (song !== -1) {\n\t\t\t\t\t\t\t\tupdatedSongs.splice(song, 1)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn updatedSongs // Возвращаем новый массив\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconsole.log(songs)\n\t\t\t\t\t} else if (action === 'newCurrentPlayed') {\n\t\t\t\t\t\tsetCurrentPlayed(song)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error fetching data:', error)\n\t\t\t}\n\t\t}\n\n\t\t// Вызываем функцию при монтировании компонента\n\t\tfetchData()\n\t\treturn () => {\n\t\t\tsocket.off('updatePlaylist')\n\t\t}\n\t}, [songs, currentPlayed]) // Пустой массив зависимостей гарантирует, что эффект выполняется только один раз при монтировании\n\tconst goNextSongs = () => {\n\t\tsocket.emit('goNextSongs')\n\t}\n\tconst goPrevSongs = () => {\n\t\tsocket.emit('goPrevSongs')\n\t}\n\tconst play = item => {\n\t\tsocket.emit('setPlayItem', { item })\n\t}\n\tconst remove = item => {\n\t\tsocket.emit('deltetePlayItem', { item })\n\t}\n\tconst finded = songs.find(x => x.id === currentPlayed)\n\tconst text =\n\t\tcurrentPlayed === -1 ? '' : finded === undefined ? '' : finded.title\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<div className={classes.player}>\n\t\t\t\t{text === '' ? (\n\t\t\t\t\t<p></p>\n\t\t\t\t) : (\n\t\t\t\t\t<div className={classes.songTitle}>Now Playing: {text}</div>\n\t\t\t\t)}\n\n\t\t\t\t<div className={classes.controls}>\n\t\t\t\t\t<button onClick={() => goPrevSongs()}>Previous</button>\n\t\t\t\t\t<button>Play</button>\n\t\t\t\t\t<button onClick={() => goNextSongs()}>Next</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<PlayedList\n\t\t\t\tremove={remove}\n\t\t\t\tplay={play}\n\t\t\t\tcurrentPlayed={currentPlayed}\n\t\t\t\titems={songs}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}