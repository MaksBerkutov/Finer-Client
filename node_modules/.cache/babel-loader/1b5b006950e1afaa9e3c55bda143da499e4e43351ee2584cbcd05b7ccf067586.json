{"ast":null,"code":"var _jsxFileName = \"/home/maksb/\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438/170km/frontend/src/components/Pages/MusicPage/Music.jsx\",\n  _s = $RefreshSig$();\nimport classes from './Music.module.css';\nimport { useState, useEffect } from 'react';\nimport PlayedList from './PlayedList/PlayedList';\nimport { Routes, useLocation } from 'react-router-dom';\nimport MusicPlayer from './MusicPlayer/MusicPlayer';\nimport { useUpdatePlaylist } from './hooks/useUpdatePlaylist';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3004');\nfunction Music() {\n  _s();\n  const location = useLocation();\n  const [playedStatus, setStatus] = useState(true);\n  const [plalistInfo, setPlalistInfo] = useState({\n    songs: [],\n    currentPlayed: -1\n  });\n  const idServer = location.state.idServer || undefined;\n  const idUser = location.state.idUser || undefined;\n  //const { songs, currentPlayed } = useUpdatePlaylist(socket, idServer, idUser)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        socket.emit('connectMe', {\n          idServer: idServer,\n          idUser: idUser\n        }, callback => {\n          console.log(callback);\n        });\n        socket === null || socket === void 0 ? void 0 : socket.on('updatePlayed', status => {\n          setStatus(status);\n        });\n        socket === null || socket === void 0 ? void 0 : socket.on('updatePlaylist', ({\n          action,\n          song\n        }) => {\n          if (song === undefined) return;\n          if (action === 'allItems') {\n            socket === null || socket === void 0 ? void 0 : socket.emit('getCurrentStatus', {\n              id: idServer\n            }, callback => {\n              setStatus(callback);\n            });\n          }\n        });\n        socket === null || socket === void 0 ? void 0 : socket.emit('getAllInfo', {\n          id: idServer\n        });\n        socket === null || socket === void 0 ? void 0 : socket.on('updatePlaylist', ({\n          action,\n          song\n        }) => {\n          if (song === undefined) return;\n          if (action === 'allItems') {\n            setPlalistInfo(prevInfo => ({\n              ...prevInfo,\n              songs: song\n            }));\n            console.log('set new playlist', song);\n            socket === null || socket === void 0 ? void 0 : socket.emit('getCurrentPlayed', {\n              id: idServer\n            }, callback => {\n              setPlalistInfo(prevInfo => ({\n                ...prevInfo,\n                currentPlayed: callback\n              }));\n            });\n          } else if (action === 'newCurrentPlayed') {\n            setPlalistInfo(prevInfo => ({\n              ...prevInfo,\n              currentPlayed: song\n            }));\n          } else if (action === 'add') {\n            setPlalistInfo(prevInfo => ({\n              ...prevInfo,\n              songs: [...prevInfo.songs, song]\n            }));\n          } else if (action === 'remove') {\n            const remove = songs => {\n              const updatedSongs = [...songs];\n              if (song !== -1) {\n                updatedSongs.splice(song, 1);\n              }\n              return updatedSongs;\n            };\n            setPlalistInfo(prevInfo => ({\n              ...prevInfo,\n              songs: remove(prevInfo.songs)\n            }));\n          }\n        });\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    return () => {\n      socket === null || socket === void 0 ? void 0 : socket.off('updatePlaylist');\n      socket === null || socket === void 0 ? void 0 : socket.off('updatePlaylist');\n      socket === null || socket === void 0 ? void 0 : socket.off('updatePlayed');\n    };\n  }, [idServer]);\n  const play = item => {\n    console.log('PLAYED');\n    console.log(item);\n    socket === null || socket === void 0 ? void 0 : socket.emit('setPlayItem', {\n      id: idServer,\n      item: item\n    });\n  };\n  const remove = item => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('deltetePlayItem', {\n      id: idServer,\n      item: item\n    });\n  };\n  const handlerImport = obj => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('importedPlaylist', {\n      id: idServer,\n      obj: obj\n    });\n  };\n  console.log('SIZE NEW ARRAY   ', plalistInfo.songs.length);\n  const finded = plalistInfo.songs.find(x => x.id === plalistInfo.currentPlayed);\n  const text = plalistInfo.currentPlayed === -1 ? '' : finded === undefined ? '' : finded.title;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TopMenu, {\n      userId: User.id,\n      currentid: selecetedId,\n      listServer: ListServers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n}\n_s(Music, \"JAWF4g9AoalpAOJKnpLaW3Gec94=\", false, function () {\n  return [useLocation];\n});\n_c = Music;\nexport default Music;\nvar _c;\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"names":["classes","useState","useEffect","PlayedList","Routes","useLocation","MusicPlayer","useUpdatePlaylist","io","jsxDEV","_jsxDEV","socket","Music","_s","location","playedStatus","setStatus","plalistInfo","setPlalistInfo","songs","currentPlayed","idServer","state","undefined","idUser","fetchData","emit","callback","console","log","on","status","action","song","id","prevInfo","remove","updatedSongs","splice","error","off","play","item","handlerImport","obj","length","finded","find","x","text","title","children","TopMenu","userId","User","currentid","selecetedId","listServer","ListServers","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/maksb/Загрузки/170km/frontend/src/components/Pages/MusicPage/Music.jsx"],"sourcesContent":["import classes from './Music.module.css'\nimport { useState, useEffect } from 'react'\nimport PlayedList from './PlayedList/PlayedList'\nimport { Routes, useLocation } from 'react-router-dom'\n\nimport MusicPlayer from './MusicPlayer/MusicPlayer'\nimport { useUpdatePlaylist } from './hooks/useUpdatePlaylist'\nimport io from 'socket.io-client'\nconst socket = io('http://localhost:3004')\nfunction Music() {\n\tconst location = useLocation()\n\tconst [playedStatus, setStatus] = useState(true)\n\tconst [plalistInfo, setPlalistInfo] = useState({\n\t\tsongs: [],\n\t\tcurrentPlayed: -1,\n\t})\n\tconst idServer = location.state.idServer || undefined\n\tconst idUser = location.state.idUser || undefined\n\t//const { songs, currentPlayed } = useUpdatePlaylist(socket, idServer, idUser)\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tsocket.emit(\n\t\t\t\t\t'connectMe',\n\t\t\t\t\t{ idServer: idServer, idUser: idUser },\n\t\t\t\t\tcallback => {\n\t\t\t\t\t\tconsole.log(callback)\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\tsocket?.on('updatePlayed', status => {\n\t\t\t\t\tsetStatus(status)\n\t\t\t\t})\n\n\t\t\t\tsocket?.on('updatePlaylist', ({ action, song }) => {\n\t\t\t\t\tif (song === undefined) return\n\t\t\t\t\tif (action === 'allItems') {\n\t\t\t\t\t\tsocket?.emit('getCurrentStatus', { id: idServer }, callback => {\n\t\t\t\t\t\t\tsetStatus(callback)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tsocket?.emit('getAllInfo', { id: idServer })\n\t\t\t\tsocket?.on('updatePlaylist', ({ action, song }) => {\n\t\t\t\t\tif (song === undefined) return\n\t\t\t\t\tif (action === 'allItems') {\n\t\t\t\t\t\tsetPlalistInfo(prevInfo => ({\n\t\t\t\t\t\t\t...prevInfo,\n\t\t\t\t\t\t\tsongs: song,\n\t\t\t\t\t\t}))\n\t\t\t\t\t\tconsole.log('set new playlist', song)\n\n\t\t\t\t\t\tsocket?.emit('getCurrentPlayed', { id: idServer }, callback => {\n\t\t\t\t\t\t\tsetPlalistInfo(prevInfo => ({\n\t\t\t\t\t\t\t\t...prevInfo,\n\t\t\t\t\t\t\t\tcurrentPlayed: callback,\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t})\n\t\t\t\t\t} else if (action === 'newCurrentPlayed') {\n\t\t\t\t\t\tsetPlalistInfo(prevInfo => ({\n\t\t\t\t\t\t\t...prevInfo,\n\t\t\t\t\t\t\tcurrentPlayed: song,\n\t\t\t\t\t\t}))\n\t\t\t\t\t} else if (action === 'add') {\n\t\t\t\t\t\tsetPlalistInfo(prevInfo => ({\n\t\t\t\t\t\t\t...prevInfo,\n\t\t\t\t\t\t\tsongs: [...prevInfo.songs, song],\n\t\t\t\t\t\t}))\n\t\t\t\t\t} else if (action === 'remove') {\n\t\t\t\t\t\tconst remove = songs => {\n\t\t\t\t\t\t\tconst updatedSongs = [...songs]\n\n\t\t\t\t\t\t\tif (song !== -1) {\n\t\t\t\t\t\t\t\tupdatedSongs.splice(song, 1)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn updatedSongs\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetPlalistInfo(prevInfo => ({\n\t\t\t\t\t\t\t...prevInfo,\n\t\t\t\t\t\t\tsongs: remove(prevInfo.songs),\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error fetching data:', error)\n\t\t\t}\n\t\t}\n\n\t\tfetchData()\n\t\treturn () => {\n\t\t\tsocket?.off('updatePlaylist')\n\t\t\tsocket?.off('updatePlaylist')\n\t\t\tsocket?.off('updatePlayed')\n\t\t}\n\t}, [idServer])\n\n\tconst play = item => {\n\t\tconsole.log('PLAYED')\n\t\tconsole.log(item)\n\t\tsocket?.emit('setPlayItem', { id: idServer, item: item })\n\t}\n\tconst remove = item => {\n\t\tsocket?.emit('deltetePlayItem', { id: idServer, item: item })\n\t}\n\tconst handlerImport = obj => {\n\t\tsocket?.emit('importedPlaylist', { id: idServer, obj: obj })\n\t}\n\tconsole.log('SIZE NEW ARRAY   ', plalistInfo.songs.length)\n\tconst finded = plalistInfo.songs.find(x => x.id === plalistInfo.currentPlayed)\n\tconst text =\n\t\tplalistInfo.currentPlayed === -1\n\t\t\t? ''\n\t\t\t: finded === undefined\n\t\t\t? ''\n\t\t\t: finded.title\n\treturn (\n\t\t<div>\n\t\t\t<TopMenu\n\t\t\t\tuserId={User.id}\n\t\t\t\tcurrentid={selecetedId}\n\t\t\t\tlistServer={ListServers}\n\t\t\t/>\n\t\t</div>\n\t\t\n\t)\n}\n\nexport default Music\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}