{"ast":null,"code":"import SendChatForm from'@component/Form/SendChatForm';import ModalWindows from'@component/UI/ModalMindow/ModalWindow';import{useState}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const TreeItem=_ref=>{let{item,SubmitTextCallback,className}=_ref;const[visibleModal,setVisibleModal]=useState(false);let icon='';switch(item.type){case'text':icon='üìù';break;case'voice':icon='üîà';break;default:icon='üõë';break;}const ClickCallback=()=>{if(item.type==='text'){setVisibleModal(true);}};const ChatFormHandler=text=>{setVisibleModal(false);SubmitTextCallback({...item,item:text});};const title=\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \".concat(item.name);return/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item \".concat(className),children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{onClick:()=>ClickCallback(item),children:[item.name,\" \",icon]})}),/*#__PURE__*/_jsx(ModalWindows,{title:title,visible:visibleModal,setVisible:setVisibleModal,children:/*#__PURE__*/_jsx(SendChatForm,{onSubmitText:ChatFormHandler})})]});};export default TreeItem;","map":{"version":3,"names":["SendChatForm","ModalWindows","useState","jsxs","_jsxs","jsx","_jsx","TreeItem","_ref","item","SubmitTextCallback","className","visibleModal","setVisibleModal","icon","type","ClickCallback","ChatFormHandler","text","title","concat","name","children","onClick","visible","setVisible","onSubmitText"],"sources":["/home/maksb/–ó–∞–≥—Ä—É–∑–∫–∏/170km/frontend/src/pages/AdminPage/components/TreeChannel/TreeItem/TreeItem.jsx"],"sourcesContent":["import SendChatForm from '@component/Form/SendChatForm'\nimport ModalWindows from '@component/UI/ModalMindow/ModalWindow'\nimport { useState } from 'react'\n\nconst TreeItem = ({ item, SubmitTextCallback, className}) => {\n\tconst [visibleModal, setVisibleModal] = useState(false)\n\n\tlet icon = ''\n\tswitch (item.type) {\n\t\tcase 'text':\n\t\t\ticon = 'üìù'\n\t\t\tbreak\n\t\tcase 'voice':\n\t\t\ticon = 'üîà'\n\t\t\tbreak\n\t\tdefault:\n\t\t\ticon = 'üõë'\n\t\t\tbreak\n\t}\n\tconst ClickCallback = () => {\n\t\tif (item.type === 'text') {\n\t\t\tsetVisibleModal(true)\n\t\t}\n\t}\n\tconst ChatFormHandler = text => {\n\t\tsetVisibleModal(false)\n\t\tSubmitTextCallback({ ...item, item: text })\n\t}\n\tconst title = `–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ ${item.name}`\n\treturn (\n\t\t<li className={`list-group-item ${className}`}>\n\t\t\t<div>\n\t\t\t\t<p onClick={() => ClickCallback(item)}>\n\t\t\t\t\t{item.name} {icon}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<ModalWindows\n\t\t\t\ttitle={title}\n\t\t\t\tvisible={visibleModal}\n\t\t\t\tsetVisible={setVisibleModal}\n\t\t\t>\n\t\t\t\t<SendChatForm onSubmitText={ChatFormHandler} />\n\t\t\t</ModalWindows>\n\t\t</li>\n\t)\n}\n\nexport default TreeItem\n"],"mappings":"AAAA,MAAO,CAAAA,YAAY,KAAM,8BAA8B,CACvD,MAAO,CAAAC,YAAY,KAAM,uCAAuC,CAChE,OAASC,QAAQ,KAAQ,OAAO,QAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAEhC,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAA4C,IAA3C,CAAEC,IAAI,CAAEC,kBAAkB,CAAEC,SAAS,CAAC,CAAAH,IAAA,CACvD,KAAM,CAACI,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAEvD,GAAI,CAAAY,IAAI,CAAG,EAAE,CACb,OAAQL,IAAI,CAACM,IAAI,EAChB,IAAK,MAAM,CACVD,IAAI,CAAG,IAAI,CACX,MACD,IAAK,OAAO,CACXA,IAAI,CAAG,IAAI,CACX,MACD,QACCA,IAAI,CAAG,IAAI,CACX,MACF,CACA,KAAM,CAAAE,aAAa,CAAGA,CAAA,GAAM,CAC3B,GAAIP,IAAI,CAACM,IAAI,GAAK,MAAM,CAAE,CACzBF,eAAe,CAAC,IAAI,CAAC,CACtB,CACD,CAAC,CACD,KAAM,CAAAI,eAAe,CAAGC,IAAI,EAAI,CAC/BL,eAAe,CAAC,KAAK,CAAC,CACtBH,kBAAkB,CAAC,CAAE,GAAGD,IAAI,CAAEA,IAAI,CAAES,IAAK,CAAC,CAAC,CAC5C,CAAC,CACD,KAAM,CAAAC,KAAK,kEAAAC,MAAA,CAAkBX,IAAI,CAACY,IAAI,CAAE,CACxC,mBACCjB,KAAA,OAAIO,SAAS,oBAAAS,MAAA,CAAqBT,SAAS,CAAG,CAAAW,QAAA,eAC7ChB,IAAA,QAAAgB,QAAA,cACClB,KAAA,MAAGmB,OAAO,CAAEA,CAAA,GAAMP,aAAa,CAACP,IAAI,CAAE,CAAAa,QAAA,EACpCb,IAAI,CAACY,IAAI,CAAC,GAAC,CAACP,IAAI,EACf,CAAC,CACA,CAAC,cACNR,IAAA,CAACL,YAAY,EACZkB,KAAK,CAAEA,KAAM,CACbK,OAAO,CAAEZ,YAAa,CACtBa,UAAU,CAAEZ,eAAgB,CAAAS,QAAA,cAE5BhB,IAAA,CAACN,YAAY,EAAC0B,YAAY,CAAET,eAAgB,CAAE,CAAC,CAClC,CAAC,EACZ,CAAC,CAEP,CAAC,CAED,cAAe,CAAAV,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}